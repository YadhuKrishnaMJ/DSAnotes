Dynamic Arrays are implemented using ArrayList in Java

Creating:

import java.util.ArrayList;

ArrayList<Integer> dynamicArray = new ArrayList<>();

-> initial capacity inside ()
-> <> denotes the type, no primitives allowed only wrapper classes
........................................
Adding in Dynamic ArrayList

dynamicArray.add(10);
dynamicArray.add(20);
dynamicArray.add(30);

...................................
Retrieve Elements

int firstElement = dynamicArray.get(0); // Retrieves the first element (10)

.....................................

Printing Elements

for (int i = 0; i < dynamicArray.size(); i++) {
    System.out.println(dynamicArray.get(i));
}

for (int num : dynamicArray) {
    System.out.println(num);
}
..........................................
//Using Iterator

import java.util.Iterator;

Iterator<Integer> iterator = dynamicArray.iterator();
while (iterator.hasNext()) {
    System.out.println(iterator.next());
}

-> hasNext() checks if there is element 
-> next() access the current element and iterate to next

Iterator Method:
    -> remove() to remove elements using iterator
    -> modifying directly causes concurrent modification exception

//Using ListIterator

ListIterator<Integer> listIterator = dynamicArray.listIterator();
while (listIterator.hasNext()) {
    Integer element = listIterator.next();
}

-> List iterator supports both next() and previous()

..........................................

Removing Elements in ArrayList

dynamicArray.remove(1); // Removes the element at index 1
dynamicArray.remove(Integer.valueOf(30)); // Removes the first occurrence of the specified element

...........................................

-> Dynamic Arrays have a performance Overhead

.........................................

More ArrayList functions

-> clear() -> Clear the array

dynamicArray.clear();


-> isEmpty() -> Check if the dynamic array is empty

if (dynamicArray.isEmpty()) {
    System.out.println("ArrayList is empty");
}


-> indexOf() -> gets the index of specified element

dynamicArray.indexOf(10);

-> contains() -> check if it contains the element

if (dynamicArray.contains(30)) {
    System.out.println("ArrayList contains 30");
}

-> set()  and  add() 
    -> set sets the element, add adds the element and shifts the array

dynamicArray.set(1, 25); // Sets the element at index 1 to 25

dynamicArray.add(1, 15); // Inserts 15 at index 1, shifting the existing elements


-> deleting a range using subList()

dynamicArray.subList(1, 3).clear(); // Removes elements from index 1 to index 2 (inclusive)

-> Creating a subList

ArrayList<Integer> subList = new ArrayList<>(dynamicArray.subList(1, 3)); // Gets elements from index 1 to index 2 (inclusive)

-> toArray()

Integer[] array = dynamicArray.toArray(new Integer[dynamicArray.size()]);

-> Collections.reverse(Arr)

Collections.reverse(dynamicArray);


...................................................................................................................................

